1	#include <string.h>
2	#include <stdlib.h>
3	#include <stdio.h>
4	
5	void sort(char **strlist, int strcnt)
6	{
7	    for(int i = 0; i < strcnt - 1; i++)
8	        for(int j = i + 1; j < strcnt; j++)
9	            if(strcmp(strlist[i], strlist[j]) > 0) {
10	                char* tmp = strlist[i];
11	                strlist[i] = strlist[j];
12	                strlist[j] = tmp;
13	            }
14	}
15	
16	int main()
17	{
18	  char *str[5];
19	  char dst[5][5] = {"asda", "sdfd", "asdf", "rtet", "dyty"};
20	  int i = 0;
21	  
22	  while (i < 5)
23	  {
24	    str[i] = (char*)malloc(sizeof(char) * 5);
25	    str[i] = strcpy(str[i], dst[i]);
26	    i++;
27	  }
28	  sort(str, 5);
29	  i = 0;
30	  while (i < 5)
31	  {
32	    printf("%s", str[i]);
33	    i++;
34	  }
35	}

------------------------------------------------------------------------

void sort(char **strlist, int strcnt)
{
	for(int i = 0; i < strcnt - 1; i++)
		for(int j = i + 1; j < strcnt; j++)
			if(ft_strcmp(strlist[i], strlist[j]) > 0) {
				char* tmp = strlist[i];
				strlist[i] = strlist[j];
				strlist[j] = tmp;
			}
}

int					main(int argc, char **argv)
{
	DIR				*dp;
	struct dirent	*dirp;
	struct stat 	mystat;
	int				size;
	char			*buf[512];
	int				i;
	int				j;

	if (argc == 1)
	{
		if ((dp = opendir(".")) == NULL)
		{
			perror("ft_ls: dir");
			exit(0);
		}
		i = 0;
		while ((dirp = readdir(dp)) != NULL)
		{
			if (ft_strcmp(dirp->d_name, ".") == 0 || ft_strcmp(dirp->d_name, "..") == 0 || ft_strncmp(dirp->d_name, ".", 1) == 0)
				continue;
			buf[i] = (char*)malloc(sizeof(char) * (ft_strlen(dirp->d_name) + 1));
			buf[i] = ft_strcpy(buf[i], dirp->d_name);
			i++;
		}
		closedir(dp);
		sort(buf, i);
		j = 0;
		while (j < i)
		{
			ft_putstr(buf[j]);
			ft_putstr("\n");
			free(buf[j]);
			buf[j] = NULL;
			j++;
		}
		return (0);	
	}
	if ((dp = opendir(argv[1])) == NULL)
	{
		perror("ft_ls: dir");
		exit(0);
	}
	while ((dirp = readdir(dp)) != NULL)
	{
        stat(dirp->d_name, &mystat);
		size = mystat.st_size;
        ft_putnbr(size);
		ft_putchar(' ');
        ft_putstr(dirp->d_name);
		ft_putchar('\n');
	}
	closedir(dp);
	return (0);
}